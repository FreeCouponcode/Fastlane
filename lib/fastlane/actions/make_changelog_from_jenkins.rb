module Fastlane
  module Actions
    class MakeChangelogFromJenkinsAction < Action
      def self.run(params)
        Actions.verify_gem!('nokogiri')
        require 'nokogiri'
        require 'net/http'

        changelog = ""

        if Helper.is_ci?
          # The "BUILD_URL" environment variable is set automatically by Jenkins in every build
          jenkins_xml_url = URI(ENV["BUILD_URL"] + "api/xml\?wrapper\=changes\&xpath\=//changeSet//comment")
          doc = Nokogiri.XML(Net::HTTP.get(jenkins_xml_url))
          doc.css('comment').each do |comment|
            changelog << comment.text.strip + "\n"
          end
        end

        Actions.lane_context[SharedValues::FL_CHANGELOG] = changelog.strip.length > 0 ? changelog : params[:fallback_changelog]
      end

      def self.description
        "Generate a changelog using the Changes section from the current Jenkins build"
      end

      def self.details
        "This is useful when deploying automated builds. The changelog from Jenkins lists all the commit messages since the last build."
      end

      def self.available_options
        [
          FastlaneCore::ConfigItem.new(key: :fallback_changelog,
                                       description: "Fallback changelog if there is not one on Jenkins",
                                       optional: true,
                                       default_value: "")
        ]
      end

      def self.output
        ['FL_CHANGELOG', 'The changelog generated by Jenkins']
      end

      def self.authors
        ["mandrizzle"]
      end

      def self.is_supported?(platform)
        true
      end
    end
  end
end
