require 'fastlane/action'
require_relative '../helper/<%= plugin_name %>_helper'

module Fastlane
  module Actions
    class <%= plugin_name.fastlane_class %>Action < Action
      def self.run(params)
        UI.message("The <%= plugin_name %> plugin is working!")
      end

      def self.description
        "<%= summary.gsub('"', "'") %>"
      end

      def self.details
        # Optional:
        "<%= details.gsub('"', "'") %>"
      end

      def self.authors
        ["<%= author.gsub('"', "'") %>"]
      end

      def self.available_options
        [
          # FastlaneCore::ConfigItem.new(key: :your_option,
          #                         env_name: "<%= plugin_name.upcase %>_YOUR_OPTION",
          #                      description: "A description of your option",
          #                         optional: false,
          #                             type: String)
        ]
      end

      def self.return_value
        # If your method provides a return value, you can describe here what it does
      end

      def self.output
        # Define the shared values you are going to provide
        # Example
        [
          ['[[NAME_UP]]_CUSTOM_VALUE', 'A description of what this value contains']
        ]
      end

      def self.is_supported?(platform)
        # you can do things like
        #
        #  true
        #
        #  platform == :ios
        #
        #  [:ios, :mac].include?(platform)
        #

        true
      end

      def self.is_incompatible?(operating_system)
        # you can do things like
        #
        #  operating_system != "macOS"
        #
        #  ["macOS", "Linux", "Windows"].include?(operating_system)
        #

        false
      end
    end
  end
end
